{
	"info": {
		"_postman_id": "8465ee10-04dc-4aa5-a715-e146b0079c13",
		"name": "JIRAChaining",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CreateIssue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//any script or function which will execute after receiving the api response\r",
							"\r",
							"//1. Validate the status code is 201\r",
							"pm.test(\"validate the status code is 201\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"//2.Take the response Json\r",
							"var response_json= pm.response.json();\r",
							"//3.Traverse the json to the field sys_id and store in local variable\r",
							"var local_jira_id= response_json.id;\r",
							"\r",
							"// Assign the value to global_sys_id\r",
							"pm.globals.set(\"global_jira_id\", local_jira_id);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fields\":{\r\n        \"project\":{\r\n            \"key\":\"AP\"\r\n        },\r\n        \"summary\":\"create issue in RA Project\",\r\n        \"description\":\"Creating of an issue using project keys and issue type names using the REST API\",\r\n        \"issuetype\":{\r\n            \"name\": \"Bug\"\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restapijira.atlassian.net/rest/api/2/issue/",
					"protocol": "https",
					"host": [
						"restapijira",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "ModifyIssue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"validate the status code is 204\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fields\":{\r\n        \"project\":{\r\n            \"key\":\"AP\"\r\n        },\r\n        \"summary\":\"Updating issue summary using postman chaining\",\r\n        \"description\":\"update issue using PUT method\"\r\n        \r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restapijira.atlassian.net/rest/api/2/issue/{{global_jira_id}}",
					"protocol": "https",
					"host": [
						"restapijira",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue",
						"{{global_jira_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteIssue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"validate the status code is 204\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://restapijira.atlassian.net/rest/api/2/issue/{{global_jira_id}}",
					"protocol": "https",
					"host": [
						"restapijira",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"2",
						"issue",
						"{{global_jira_id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "RestAPIJira@gmail.com",
				"type": "string"
			},
			{
				"key": "password",
				"value": "5cpm7Dkyw9IPG7ir2hX65CF2",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}